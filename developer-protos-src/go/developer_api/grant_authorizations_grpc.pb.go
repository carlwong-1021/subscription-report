// grant_authorizations.proto

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.22.2
// source: grant_authorizations.proto

package developer_api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	GrantAuthorizations_Index_FullMethodName                    = "/DeveloperApi.GrantAuthorizations/Index"
	GrantAuthorizations_Create_FullMethodName                   = "/DeveloperApi.GrantAuthorizations/Create"
	GrantAuthorizations_Delete_FullMethodName                   = "/DeveloperApi.GrantAuthorizations/Delete"
	GrantAuthorizations_IsInstalledAndSubscribed_FullMethodName = "/DeveloperApi.GrantAuthorizations/IsInstalledAndSubscribed"
	GrantAuthorizations_IsMerchantEnabledApp_FullMethodName     = "/DeveloperApi.GrantAuthorizations/IsMerchantEnabledApp"
	GrantAuthorizations_ShowAppSettings_FullMethodName          = "/DeveloperApi.GrantAuthorizations/ShowAppSettings"
	GrantAuthorizations_UpdateAppSettings_FullMethodName        = "/DeveloperApi.GrantAuthorizations/UpdateAppSettings"
)

// GrantAuthorizationsClient is the client API for GrantAuthorizations service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GrantAuthorizationsClient interface {
	Index(ctx context.Context, in *GrantIndexRequest, opts ...grpc.CallOption) (*GrantIndexReply, error)
	Create(ctx context.Context, in *GrantCreateRequest, opts ...grpc.CallOption) (*GrantAuthorization, error)
	Delete(ctx context.Context, in *GrantDeleteRequest, opts ...grpc.CallOption) (*GrantAuthorizationEmptyReply, error)
	IsInstalledAndSubscribed(ctx context.Context, in *IsInstalledAndSubscribedRequest, opts ...grpc.CallOption) (*GrantIndexReply, error)
	IsMerchantEnabledApp(ctx context.Context, in *IsMerchantEnabledAppRequest, opts ...grpc.CallOption) (*IsMerchantEnabledAppReply, error)
	ShowAppSettings(ctx context.Context, in *GrantShowAppSettingsRequest, opts ...grpc.CallOption) (*AppSettingsReply, error)
	UpdateAppSettings(ctx context.Context, in *GrantUpdateAppSettingsRequest, opts ...grpc.CallOption) (*AppSettingsReply, error)
}

type grantAuthorizationsClient struct {
	cc grpc.ClientConnInterface
}

func NewGrantAuthorizationsClient(cc grpc.ClientConnInterface) GrantAuthorizationsClient {
	return &grantAuthorizationsClient{cc}
}

func (c *grantAuthorizationsClient) Index(ctx context.Context, in *GrantIndexRequest, opts ...grpc.CallOption) (*GrantIndexReply, error) {
	out := new(GrantIndexReply)
	err := c.cc.Invoke(ctx, GrantAuthorizations_Index_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grantAuthorizationsClient) Create(ctx context.Context, in *GrantCreateRequest, opts ...grpc.CallOption) (*GrantAuthorization, error) {
	out := new(GrantAuthorization)
	err := c.cc.Invoke(ctx, GrantAuthorizations_Create_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grantAuthorizationsClient) Delete(ctx context.Context, in *GrantDeleteRequest, opts ...grpc.CallOption) (*GrantAuthorizationEmptyReply, error) {
	out := new(GrantAuthorizationEmptyReply)
	err := c.cc.Invoke(ctx, GrantAuthorizations_Delete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grantAuthorizationsClient) IsInstalledAndSubscribed(ctx context.Context, in *IsInstalledAndSubscribedRequest, opts ...grpc.CallOption) (*GrantIndexReply, error) {
	out := new(GrantIndexReply)
	err := c.cc.Invoke(ctx, GrantAuthorizations_IsInstalledAndSubscribed_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grantAuthorizationsClient) IsMerchantEnabledApp(ctx context.Context, in *IsMerchantEnabledAppRequest, opts ...grpc.CallOption) (*IsMerchantEnabledAppReply, error) {
	out := new(IsMerchantEnabledAppReply)
	err := c.cc.Invoke(ctx, GrantAuthorizations_IsMerchantEnabledApp_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grantAuthorizationsClient) ShowAppSettings(ctx context.Context, in *GrantShowAppSettingsRequest, opts ...grpc.CallOption) (*AppSettingsReply, error) {
	out := new(AppSettingsReply)
	err := c.cc.Invoke(ctx, GrantAuthorizations_ShowAppSettings_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grantAuthorizationsClient) UpdateAppSettings(ctx context.Context, in *GrantUpdateAppSettingsRequest, opts ...grpc.CallOption) (*AppSettingsReply, error) {
	out := new(AppSettingsReply)
	err := c.cc.Invoke(ctx, GrantAuthorizations_UpdateAppSettings_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrantAuthorizationsServer is the server API for GrantAuthorizations service.
// All implementations must embed UnimplementedGrantAuthorizationsServer
// for forward compatibility
type GrantAuthorizationsServer interface {
	Index(context.Context, *GrantIndexRequest) (*GrantIndexReply, error)
	Create(context.Context, *GrantCreateRequest) (*GrantAuthorization, error)
	Delete(context.Context, *GrantDeleteRequest) (*GrantAuthorizationEmptyReply, error)
	IsInstalledAndSubscribed(context.Context, *IsInstalledAndSubscribedRequest) (*GrantIndexReply, error)
	IsMerchantEnabledApp(context.Context, *IsMerchantEnabledAppRequest) (*IsMerchantEnabledAppReply, error)
	ShowAppSettings(context.Context, *GrantShowAppSettingsRequest) (*AppSettingsReply, error)
	UpdateAppSettings(context.Context, *GrantUpdateAppSettingsRequest) (*AppSettingsReply, error)
	mustEmbedUnimplementedGrantAuthorizationsServer()
}

// UnimplementedGrantAuthorizationsServer must be embedded to have forward compatible implementations.
type UnimplementedGrantAuthorizationsServer struct {
}

func (UnimplementedGrantAuthorizationsServer) Index(context.Context, *GrantIndexRequest) (*GrantIndexReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Index not implemented")
}
func (UnimplementedGrantAuthorizationsServer) Create(context.Context, *GrantCreateRequest) (*GrantAuthorization, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedGrantAuthorizationsServer) Delete(context.Context, *GrantDeleteRequest) (*GrantAuthorizationEmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (UnimplementedGrantAuthorizationsServer) IsInstalledAndSubscribed(context.Context, *IsInstalledAndSubscribedRequest) (*GrantIndexReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsInstalledAndSubscribed not implemented")
}
func (UnimplementedGrantAuthorizationsServer) IsMerchantEnabledApp(context.Context, *IsMerchantEnabledAppRequest) (*IsMerchantEnabledAppReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsMerchantEnabledApp not implemented")
}
func (UnimplementedGrantAuthorizationsServer) ShowAppSettings(context.Context, *GrantShowAppSettingsRequest) (*AppSettingsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowAppSettings not implemented")
}
func (UnimplementedGrantAuthorizationsServer) UpdateAppSettings(context.Context, *GrantUpdateAppSettingsRequest) (*AppSettingsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAppSettings not implemented")
}
func (UnimplementedGrantAuthorizationsServer) mustEmbedUnimplementedGrantAuthorizationsServer() {}

// UnsafeGrantAuthorizationsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GrantAuthorizationsServer will
// result in compilation errors.
type UnsafeGrantAuthorizationsServer interface {
	mustEmbedUnimplementedGrantAuthorizationsServer()
}

func RegisterGrantAuthorizationsServer(s grpc.ServiceRegistrar, srv GrantAuthorizationsServer) {
	s.RegisterService(&GrantAuthorizations_ServiceDesc, srv)
}

func _GrantAuthorizations_Index_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrantIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrantAuthorizationsServer).Index(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GrantAuthorizations_Index_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrantAuthorizationsServer).Index(ctx, req.(*GrantIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrantAuthorizations_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrantCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrantAuthorizationsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GrantAuthorizations_Create_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrantAuthorizationsServer).Create(ctx, req.(*GrantCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrantAuthorizations_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrantDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrantAuthorizationsServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GrantAuthorizations_Delete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrantAuthorizationsServer).Delete(ctx, req.(*GrantDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrantAuthorizations_IsInstalledAndSubscribed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsInstalledAndSubscribedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrantAuthorizationsServer).IsInstalledAndSubscribed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GrantAuthorizations_IsInstalledAndSubscribed_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrantAuthorizationsServer).IsInstalledAndSubscribed(ctx, req.(*IsInstalledAndSubscribedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrantAuthorizations_IsMerchantEnabledApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsMerchantEnabledAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrantAuthorizationsServer).IsMerchantEnabledApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GrantAuthorizations_IsMerchantEnabledApp_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrantAuthorizationsServer).IsMerchantEnabledApp(ctx, req.(*IsMerchantEnabledAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrantAuthorizations_ShowAppSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrantShowAppSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrantAuthorizationsServer).ShowAppSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GrantAuthorizations_ShowAppSettings_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrantAuthorizationsServer).ShowAppSettings(ctx, req.(*GrantShowAppSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrantAuthorizations_UpdateAppSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrantUpdateAppSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrantAuthorizationsServer).UpdateAppSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GrantAuthorizations_UpdateAppSettings_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrantAuthorizationsServer).UpdateAppSettings(ctx, req.(*GrantUpdateAppSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// GrantAuthorizations_ServiceDesc is the grpc.ServiceDesc for GrantAuthorizations service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GrantAuthorizations_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "DeveloperApi.GrantAuthorizations",
	HandlerType: (*GrantAuthorizationsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Index",
			Handler:    _GrantAuthorizations_Index_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _GrantAuthorizations_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _GrantAuthorizations_Delete_Handler,
		},
		{
			MethodName: "IsInstalledAndSubscribed",
			Handler:    _GrantAuthorizations_IsInstalledAndSubscribed_Handler,
		},
		{
			MethodName: "IsMerchantEnabledApp",
			Handler:    _GrantAuthorizations_IsMerchantEnabledApp_Handler,
		},
		{
			MethodName: "ShowAppSettings",
			Handler:    _GrantAuthorizations_ShowAppSettings_Handler,
		},
		{
			MethodName: "UpdateAppSettings",
			Handler:    _GrantAuthorizations_UpdateAppSettings_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grant_authorizations.proto",
}
